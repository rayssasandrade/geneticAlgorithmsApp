// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using geneticAlgorithmsApp.src.Data;

namespace geneticAlgorithmsApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Curso", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Disciplina", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisciplinaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<int>("QtdCreditos")
                        .HasColumnType("int");

                    b.Property<int>("QtdPreRequisitosCreditos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Local", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Professor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Turma", b =>
                {
                    b.Property<string>("LocalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CursoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProfessorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisciplinaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HorarioFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("time");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalId", "CursoId", "ProfessorId", "DisciplinaId");

                    b.HasIndex("CursoId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Disciplina", b =>
                {
                    b.HasOne("geneticAlgorithmsApp.src.Models.Disciplina", null)
                        .WithMany("PreRequisitosDisciplinas")
                        .HasForeignKey("DisciplinaId");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Turma", b =>
                {
                    b.HasOne("geneticAlgorithmsApp.src.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("geneticAlgorithmsApp.src.Models.Disciplina", "Disciplina")
                        .WithMany("Turmas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("geneticAlgorithmsApp.src.Models.Local", "Local")
                        .WithMany("Turmas")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("geneticAlgorithmsApp.src.Models.Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Disciplina");

                    b.Navigation("Local");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Disciplina", b =>
                {
                    b.Navigation("PreRequisitosDisciplinas");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Local", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("geneticAlgorithmsApp.src.Models.Professor", b =>
                {
                    b.Navigation("Turmas");
                });
#pragma warning restore 612, 618
        }
    }
}
